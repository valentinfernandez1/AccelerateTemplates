[comment encoding = UTF-8 /]
[module generateAppFile('http://www.example.org/accelerateMLI','http://www.example.org/accelerateMLS', 'http://www.example.org/accelerateMLC')]

[template public appfileGenerator(microservice: BackendMicroservice, environment: Provider)]
[file (environment.oclAsType(Environment).name + '/Microservices/'+microservice.oclAsType(Microservice).name+'/app.js', false, 'UTF-8')]
import express from "express";
import logger from "morgan";
import Cors from "cors";
import routes from "./src/Routes/index.routes.js";
import dotenv from "dotenv";

const app = express();
dotenv.config();

//Settings
const port = process.env.PORT || 3000;
app.set("port", port);

// Middlewares
app.use( express.json() );
app.use(logger('dev'));
app.use( express.urlencoded({ extended: false }) );
app.use( Cors() );


//Routes
app.get("/", (req,res) => res.sendStatus(200) );

//UtilityRoutes
app.get('/health', (req,res,next)=> {
  res.status(200); 
  res.send('ok')
})

//EntityRoutes
for (const route of routes.entityRoutes) {
  app.use("/api/entity", route);
}

[for (namespace : Namespace | microservice.oclAsType(Diagram).contained_namespaces)]
//[namespace.name/] Routes
for (const route of routes.[namespace.name/]Routes) {
  app.use("/api/[namespace.name/]", route);
}
[/for]

export default app;
[/file]
[/template]
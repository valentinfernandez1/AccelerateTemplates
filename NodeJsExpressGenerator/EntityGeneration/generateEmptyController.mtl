[comment encoding = UTF-8 /]
[module generateEmptyController('http://www.example.org/accelerateMLI','http://www.example.org/accelerateMLS', 'http://www.example.org/accelerateMLC')]


[comment En caso de que no se seleccione una base de datos se generan controlladores vacios
  		 para ser implementados posteriormente por el desarrollador./]
[template public generateEmptyController(entity: Classifier, microservice: BackendMicroservice, environment: Provider)]

[comment Se genera el controlador en la ruta "./ambiente1/Microservices/microservicio1/src/controllers/ejemploController.js"/]
[file ((environment.oclAsType(Environment).name + '/Microservices/'+microservice.oclAsType(Microservice).name+'/src/controllers/'+entity.name+'Controller.js'), false, 'UTF-8'), false, 'UTF-8')]

[comment Se proveen los metodos de acceso getAll, getOneById, saveOne, updateOneById, deleteOneById
	     pero su unica funcionalidad es indicar que aun no han sido implementados. /]
export default {
  getAll: async (req, res, next) => {
  	res.status(200).json({msg: "Route --getAll-- for [entity.name/] not Implemented"});
  },

  getOneById: async (req, res, next) => {
  	res.status(200).json({msg: "Route --getOneById-- for [entity.name/] not Implemented"});
  },

  saveOne: async (req, res, next) => {
	res.status(200).json({msg: "Route --saveOne-- for [entity.name/] not Implemented"});
  },

  updateOneById: async (req, res, next) => {
	res.status(200).json({msg: "Route --updateOneById-- for [entity.name/] not Implemented"});
  },

  deleteOneById: async (req, res, next) => {
	res.status(200).json({msg: "Route --deleteOneById-- for [entity.name/] not Implemented"});
  },
};

[/file]
[/template]
[comment encoding = UTF-8 /]
[module generateSettings('http://www.example.org/accelerateMLC', 'http://www.example.org/accelerateMLI', 'http://www.example.org/accelerateMLS')]

[import AccelerateGenerator::Queries::MicroserviceQueries /]

[template public generateSettings(microservice: BackendMicroservice, environment: Provider)]
[file ((environment.oclAsType(Environment).name + '/Microservices/'+microservice.oclAsType(Microservice).name+'/'+microservice.oclAsType(Microservice).name+'/'+'settings.py'), false, 'UTF-8'), false, 'UTF-8')]
from pathlib import Path

#env
import environ
env = environ.Env()

# reading .env file
environ.Env.read_env()


# change server port
from django.core.management.commands.runserver import Command as runserver
runserver.default_port = env("PORT")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/


# SECURITY WARNING: keep the secret key used in production secret!
# Raises django's ImproperlyConfigured exception if SECRET_KEY not in os.environ
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['[]'/]


# Application definition

INSTALLED_APPS = ['['/]
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'src',
[']'/]

MIDDLEWARE = ['['/]
    'corsheaders.middleware.CorsMiddleware', # Capacidad CORS
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
[']'/]

# Dependiendo si se selecciona la capacidad CORS
CORS_ALLOW_ALL_ORIGINS: True

ROOT_URLCONF = '[microservice.name/].urls'

TEMPLATES = ['['/]
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['[]'/],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': ['['/]
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            [']'/],
        },
    },
[']'/]

WSGI_APPLICATION = '[microservice.name/].wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

[comment MongoDB /]
[if (microservice.contained_capabilities -> selectByKind(DatabaseCapability)->size() > 0)]
	[if (HasMongoDBCapability(microservice))]

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'CLIENT': {
            "host": env("MONGO_DB_URL"),
            "name": env("DATABASE_NAME"),
            "authMechanism":"SCRAM-SHA-1" # Mongo Atlas Cloud DB
        },
    }
}

	[/if]
[/if]

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = ['['/]
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
[']'/]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



[/file]

[/template]

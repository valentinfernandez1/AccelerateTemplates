[comment encoding = UTF-8 /]
[module generateMain('http://www.example.org/accelerateMLI', 'http://www.example.org/accelerateMLS')]

[template public generateMain(environment: Provider)]
[file (environment.oclAsType(Environment).name + '/Deployment Config - Environment/main.tf' , false, 'UTF-8')]
provider "google" {
  version = "~> 3.42.0"
}
module "gke_auth" {
  source = "terraform-google-modules/kubernetes-engine/google//modules/auth"
  depends_on   = [ '[module.gke]' /] 
  project_id   = var.project_id
  location     = module.gke.location
  cluster_name = module.gke.name
}
resource "local_file" "kubeconfig" {
  content  = module.gke_auth.kubeconfig_raw
  filename = "kubeconfig-${var.env_name}"
}

module "gke" {
  source                 = "terraform-google-modules/kubernetes-engine/google//modules/private-cluster"
  project_id             = var.project_id
  name                   = "${var.cluster_name}-${var.env_name}"
  regional               = true
  node_pools = [ '[' /] 
    {
      name                      = "[environment.contained_configurations->selectByType(accelerateMLI::GoogleKubernetesConfiguration).poolName/]"
      machine_type              = "[environment.contained_configurations->selectByType(accelerateMLI::GoogleKubernetesConfiguration).nodeMachineType/]"
      node_locations            = "[environment.oclAsType(GoogleProvider).region/]"
      min_count                 = [environment.contained_configurations->selectByType(accelerateMLI::GoogleKubernetesConfiguration).nodeMinCount/]
      max_count                 = [environment.contained_configurations->selectByType(accelerateMLI::GoogleKubernetesConfiguration).nodeMaxCount/]
      disk_size_gb              = [environment.contained_configurations->selectByType(accelerateMLI::GoogleKubernetesConfiguration).nodeDiskSize/]
    },
  ]
}
[/file]
[/template]

